{"version":3,"sources":["pages/PageNavLink/PageNavLink.tsx","components/Navbar/Navbar.tsx","api.ts","components/Loader/Loader.tsx","components/PersoneLink/PersonLink.tsx","components/PersonInfo/PersonInfo.tsx","components/PeoplePage/PeoplePage.tsx","App.tsx","index.tsx"],"names":["PageNavLink","to","title","className","isActive","classNames","Navbar","role","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","Loader","PersonLink","slug","sex","name","PersonInfo","person","born","died","fatherName","motherName","mother","father","useParams","personSlug","PeoplePage","useState","people","setPeople","hasError","setHasError","isLoading","setIsLoading","getPeopleFromServer","peopleFromServer","peopleWithParents","map","find","useEffect","length","App","index","element","path","replace","createRoot","document","getElementById","render"],"mappings":"6QASaA,EAA+B,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAP,OAC1C,cAAC,IAAD,CACEC,UAAW,gBAAGC,EAAH,EAAGA,SAAH,OAAkBC,IAC3B,cACA,CAAE,8BAA+BD,GAFxB,EAIXH,GAAIA,EALN,SAOGC,GARuC,ECN/BI,EAAmB,kBAC9B,qBACE,UAAQ,MACRH,UAAU,iCACVI,KAAK,aACL,aAAW,kBAJb,SAME,qBAAKJ,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,EAAD,CAAaF,GAAG,IAAIC,MAAM,SAC1B,cAAC,EAAD,CAAaD,GAAG,SAASC,MAAM,iBAVP,E,6BCMzB,SAASM,IAEd,OANYC,EAMA,IALL,IAAIC,SAAQ,SAAAC,GAAO,OAAIC,WAAWD,EAASF,EAAxB,KAMvBI,MAAK,kBAAMC,MATA,oEASN,IACLD,MAAK,SAAAE,GAAQ,OAAIA,EAASC,MAAb,IARlB,IAAcP,CASb,C,UCZYQ,EAAS,kBACpB,qBAAKd,UAAU,SAAS,UAAQ,SAAhC,SACE,qBAAKA,UAAU,qBAFG,ECOTe,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,IAAKC,EAAd,EAAcA,KAAd,OACzC,cAAC,IAAD,CACEpB,GAAE,kBAAakB,GACfhB,UAAmB,MAARiB,EAAc,kBAAoB,GAF/C,SAIGC,GALsC,ECA9BC,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAE1CF,EASEE,EATFF,KACAD,EAQEG,EARFH,IACAI,EAOED,EAPFC,KACAC,EAMEF,EANFE,KACAC,EAKEH,EALFG,WACAC,EAIEJ,EAJFI,WACAR,EAGEI,EAHFJ,KACAS,EAEEL,EAFFK,OACAC,EACEN,EADFM,OAGF,EAA4BC,cAApBC,kBAAR,MAAqB,GAArB,EAEA,OACE,qBACE,UAAQ,SACR5B,UAAWgB,IAASY,EAAa,yBAA2B,GAF9D,UAIE,6BACE,cAAC,EAAD,CAAYZ,KAAMA,EAAME,KAAMA,EAAMD,IAAKA,MAG3C,6BAAKA,IACL,6BAAKI,IACL,6BAAKC,IACL,6BACGG,EACC,cAAC,IAAD,CACE3B,GAAE,kBAAa2B,EAAOT,MACtBhB,UAAU,kBAFZ,SAIGwB,IAGHA,GAAc,MAGlB,6BACGE,EACC,cAAC,IAAD,CACE5B,GAAE,kBAAa4B,EAAOV,MADxB,SAGGO,IAGHA,GAAc,QAKvB,ECvDYM,EAAuB,WAClC,MAA4BC,mBAAmB,IAA/C,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KAEMC,EAAmB,iDAAG,gHAExBD,GAAa,GAFW,SAIO/B,IAJP,OAIlBiC,EAJkB,OAKlBC,EAAoBD,EAAiBE,KAAI,SAAApB,GAC7C,OAAO,YAAC,eACHA,GADL,IAEEK,OAAQa,EACLG,MAAK,SAAAhB,GAAM,OAAIA,EAAOP,OAASE,EAAOI,UAA3B,IACdE,OAAQY,EACLG,MAAK,SAAAf,GAAM,OAAIA,EAAOR,OAASE,EAAOG,UAA3B,KAEjB,IAEDS,EAAUO,GAfc,gDAiBxBL,GAAY,GAjBY,yBAmBxBE,GAAa,GAnBW,4EAAH,qDA2BzB,OAJAM,qBAAU,WACRL,GACD,GAAE,IAGD,qCACE,oBAAIrC,UAAU,QAAd,yBAEA,qBAAKA,UAAU,QAAf,SACE,sBAAKA,UAAU,sBAAf,UACGmC,GAAa,cAAC,EAAD,IAEbF,GACC,mBAAG,UAAQ,qBAAqBjC,UAAU,kBAA1C,mCAKAmC,IAAcJ,EAAOY,QACrB,mBAAG,UAAQ,kBAAX,+CAKF,wBACE,UAAQ,cACR3C,UAAU,uDAFZ,UAIE,gCACE,+BACE,sCACA,qCACA,sCACA,sCACA,wCACA,6CAIJ,gCACG+B,EAAOS,KAAI,SAAApB,GAAM,OAChB,cAAC,EAAD,CAAYA,OAAQA,GAAaA,EAAOJ,KADxB,gBAS/B,EC7EY4B,EAAM,kBACjB,sBAAK,UAAQ,MAAb,UACE,cAAC,EAAD,IAEA,sBAAM5C,UAAU,UAAhB,SACE,qBAAKA,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CACE6C,OAAK,EACLC,QACE,oBAAI9C,UAAU,QAAd,yBAIJ,cAAC,IAAD,CAAO+C,KAAK,OAAOD,QAAS,cAAC,IAAD,CAAUhD,GAAG,IAAIkD,SAAO,MAEpD,eAAC,IAAD,CAAOD,KAAK,SAAZ,UACE,cAAC,IAAD,CAAOF,OAAK,EAACC,QAAS,cAAC,EAAD,MACtB,cAAC,IAAD,CAAOC,KAAK,cAAcD,QAAS,cAAC,EAAD,SAGrC,cAAC,IAAD,CACEC,KAAK,IACLD,QACE,oBAAI9C,UAAU,QAAd,uCAxBK,ECEnBiD,qBAAWC,SAASC,eAAe,SAChCC,OACC,cAAC,IAAD,UACE,cAAC,EAAD,M","file":"static/js/main.61fa3ab1.chunk.js","sourcesContent":["import classNames from 'classnames';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\n\ninterface Props {\n  to: string,\n  title: string,\n}\n\nexport const PageNavLink: React.FC<Props> = ({ to, title }) => (\n  <NavLink\n    className={({ isActive }) => classNames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n    to={to}\n  >\n    {title}\n  </NavLink>\n);\n","import React from 'react';\nimport { PageNavLink } from '../../pages/PageNavLink';\n\nexport const Navbar: React.FC = () => (\n  <nav\n    data-cy=\"nav\"\n    className=\"navbar is-fixed-top has-shadow\"\n    role=\"navigation\"\n    aria-label=\"main navigation\"\n  >\n    <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <PageNavLink to=\"/\" title=\"Home\" />\n        <PageNavLink to=\"people\" title=\"People\" />\n      </div>\n    </div>\n  </nav>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  slug: string,\n  sex: string,\n  name: string,\n}\n\nexport const PersonLink: React.FC<Props> = ({ slug, sex, name }) => (\n  <Link\n    to={`/people/${slug}`}\n    className={sex === 'f' ? 'has-text-danger' : ''}\n  >\n    {name}\n  </Link>\n);\n","import React from 'react';\nimport { useParams, Link } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersoneLink/PersonLink';\n\ninterface Props {\n  person: Person,\n}\n\nexport const PersonInfo: React.FC<Props> = ({ person }) => {\n  const {\n    name,\n    sex,\n    born,\n    died,\n    fatherName,\n    motherName,\n    slug,\n    mother,\n    father,\n  } = person;\n\n  const { personSlug = '' } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={slug === personSlug ? 'has-background-warning' : ''}\n    >\n      <td>\n        <PersonLink slug={slug} name={name} sex={sex} />\n      </td>\n\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>\n        {mother ? (\n          <Link\n            to={`/people/${mother.slug}`}\n            className=\"has-text-danger\"\n          >\n            {motherName}\n          </Link>\n        ) : (\n          motherName || '-'\n        )}\n      </td>\n      <td>\n        {father ? (\n          <Link\n            to={`/people/${father.slug}`}\n          >\n            {fatherName}\n          </Link>\n        ) : (\n          fatherName || '-'\n        )}\n      </td>\n    </tr>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { PersonInfo } from '../PersonInfo';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [hasError, setHasError] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const getPeopleFromServer = async () => {\n    try {\n      setIsLoading(true);\n\n      const peopleFromServer = await getPeople();\n      const peopleWithParents = peopleFromServer.map(person => {\n        return ({\n          ...person,\n          mother: peopleFromServer\n            .find(mother => mother.name === person.motherName),\n          father: peopleFromServer\n            .find(father => father.name === person.fatherName),\n        });\n      });\n\n      setPeople(peopleWithParents);\n    } catch {\n      setHasError(true);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    getPeopleFromServer();\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {hasError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !people.length && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          <table\n            data-cy=\"peopleTable\"\n            className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n          >\n            <thead>\n              <tr>\n                <th>Name</th>\n                <th>Sex</th>\n                <th>Born</th>\n                <th>Died</th>\n                <th>Mother</th>\n                <th>Father</th>\n              </tr>\n            </thead>\n\n            <tbody>\n              {people.map(person => (\n                <PersonInfo person={person} key={person.slug} />\n              ))}\n            </tbody>\n          </table>\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\nimport { Routes, Route, Navigate } from 'react-router-dom';\nimport './App.scss';\nimport { Navbar } from './components/Navbar';\nimport { PeoplePage } from './components/PeoplePage';\n\nexport const App = () => (\n  <div data-cy=\"app\">\n    <Navbar />\n\n    <main className=\"section\">\n      <div className=\"container\">\n        <Routes>\n          <Route\n            index\n            element={(\n              <h1 className=\"title\">Home Page</h1>\n            )}\n          />\n\n          <Route path=\"home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":personSlug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route\n            path=\"*\"\n            element={(\n              <h1 className=\"title\">Page not found</h1>\n            )}\n          />\n        </Routes>\n      </div>\n    </main>\n  </div>\n);\n","import { createRoot } from 'react-dom/client';\nimport { HashRouter as Router } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <Router>\n      <App />\n    </Router>,\n  );\n"],"sourceRoot":""}